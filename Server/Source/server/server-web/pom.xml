<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>ro.hacktm.pricediff</groupId>
  <version>1.0-SNAPSHOT</version>
  <artifactId>pricediff-application</artifactId>
  <name>PriceDiff</name>
  <description>PriceDiff - Application</description>
  <packaging>war</packaging>
  <properties>
    <base.generated.docs.dir>${project.build.directory}/generated-docs</base.generated.docs.dir>
    <swagger.directory>${base.generated.docs.dir}/swagger</swagger.directory>
    <generated.asciidoc.generated.directory>${base.generated.docs.dir}/asciidoc</generated.asciidoc.generated.directory>
    <generated.asciidoc.filtered.directory>${base.generated.docs.dir}/asciidoc-source
    </generated.asciidoc.filtered.directory>
    <generated.asciidoc.file.addon>${project.version}</generated.asciidoc.file.addon>
    <generated.asciidoc.file.disclaimer>This documentation is produced on the basis of the given repository revision
      without extraneous influence of any local changes on the developer machine.
    </generated.asciidoc.file.disclaimer>
    <generated.asciidoc.file>pricediff-${generated.asciidoc.file.addon}.adoc</generated.asciidoc.file>
    <asciidoctor.input.directory>src/main/asciidoc</asciidoctor.input.directory>
    <asciidoctor.html.output.directory>${base.generated.docs.dir}/html</asciidoctor.html.output.directory>
    <asciidoctor.pdf.output.directory>${base.generated.docs.dir}/pdf</asciidoctor.pdf.output.directory>
    <swagger.host>[domain]</swagger.host>
    <swagger.port>[port]</swagger.port>
    <oracle.jdbc.version>11.2.0.2.0</oracle.jdbc.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>fish.payara.extras</groupId>
      <artifactId>payara-embedded-all</artifactId>
      <version>4.1.152.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.oracle</groupId>
      <artifactId>ojdbc6</artifactId>
      <version>${oracle.jdbc.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>fish.payara.extras</groupId>
      <artifactId>payara-embedded-web</artifactId>
      <version>4.1.152.1</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-annotations</artifactId>
      <version>1.5.8</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.4</version>
    </dependency>
  </dependencies>


  <build>
    <finalName>pricediff</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.github.kongchen</groupId>
        <artifactId>swagger-maven-plugin</artifactId>
        <configuration>
          <apiSources>
            <apiSource>
              <springmvc>false</springmvc>
              <locations>
                ro.hacktm.pricediff.business.product.boundary;ro.hacktm.pricediff.integration.dfe.boundary;ro.hacktm.pricediff.integration.our.boundary;ro.hacktm.pricediff.integration.sfconnector.boundary;ro.hacktm.pricediff.business.contract.boundary;ro.hacktm.pricediff.business.cache.boundary;ro.hacktm.pricediff.business.customer.boundary;ro.hacktm.pricediff.business.businesspartner.boundary;ro.hacktm.pricediff.business.localisation.boundary;ro.hacktm.pricediff.business.monitoring.boundary;ro.hacktm.pricediff.business.offer.boundary;ro.hacktm.pricediff.business.product.boundary;ro.hacktm.pricediff.business.usercontext.boundary;ro.hacktm.pricediff.business.batch.boundary;ro.hacktm.pricediff.business.setting.boundary;ro.hacktm.pricediff.business.printing.boundary;ro.hacktm.pricediff.integration.dcom.boundary
              </locations>
              <schemes>http,https</schemes>
              <host>${swagger.host}:${swagger.port}</host>
              <basePath>/pricediff/rs</basePath>
              <info>
                <title>pricediff</title>
                <version>v1</version>
                <!-- use markdown here because I'm using markdown for output, if you need to use html or other markup
                    language, you need to use your target language, and note escape your description for xml -->
                <description>
                  pricediff Rest Services
                </description>
                <termsOfService>
                  http://www.github.com/kongchen/swagger-maven-plugin
                </termsOfService>
                <contact>
                  <email>pricediff@hacktm.de</email>
                </contact>
              </info>
              <!-- <securityDefinitions> <securityDefinition> <name>basicAuth</name> <type>basic</type> </securityDefinition>
                  </securityDefinitions> -->
              <templatePath>${basedir}/src/main/templates/strapdown.html.hbs</templatePath>
              <outputPath>${base.generated.docs.dir}/swagger.html</outputPath>
              <swaggerDirectory>${swagger.directory}</swaggerDirectory>
              <modelSubstitute>/model-substitution.txt</modelSubstitute>
            </apiSource>
          </apiSources>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- KW: copying the swagger file for check-in is a minimalistic approach to help frontend developers to find diffs in the domain model -->
        <groupId>com.coderplus.maven.plugins</groupId>
        <artifactId>copy-rename-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-swagger-file</id>
            <phase>package</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <sourceFile>${project.build.directory}/pricediff/swagger.json</sourceFile>
              <destinationFile>${project.build.sourceDirectory}/../../main/resources/swagger.json</destinationFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <attachClasses>true</attachClasses>
          <webResources>
            <resource>
              <!-- this is relative to the pom.xml directory -->
              <directory>${swagger.directory}</directory>
            </resource>
            <resource>
              <directory>${swagger.directory}</directory>
              <!-- override the destination directory for this resource -->
              <targetPath>WEB-INF/classes</targetPath>
            </resource>
          </webResources>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.glassfish.maven.plugin</groupId>
        <artifactId>maven-glassfish-plugin</artifactId>
        <configuration>
          <glassfishDirectory>${glassfish.home}</glassfishDirectory>
          <domainDirectory>${glassfish.domainDir}</domainDirectory>
          <user>${glassfish.domain.username}</user>
          <passwordFile>${glassfish.domainDir}/${glassfish.domain.name}/config/local-password
          </passwordFile>
          <autoCreate>${glassfish.autoCreate}</autoCreate>
          <debug>true</debug>
          <echo>true</echo>
          <terse>true</terse>
          <target>${glassfish.target}</target>
          <domain>
            <name>${glassfish.domain.name}</name>
            <host>${glassfish.host}</host>
            <adminPort>${glassfish.adminport}</adminPort>
            <httpPort>${glassfish.httpPort}</httpPort>
            <iiopPort>${glassfish.iiopPort}</iiopPort>
            <jmsPort>${glassfish.jmsPort}</jmsPort>
            <reuse>${glassfish.reuse}</reuse>
          </domain>
          <components>
            <component>
              <name>${project.artifactId}</name>
              <artifact>${project.build.directory}/${project.build.finalName}.war</artifact>
            </component>
          </components>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <id>generate-version</id>
            <phase>compile</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <tstamp>
                  <format property="buildtime" pattern="yyyy-MM-dd_HH:mm"/>
                </tstamp>
                <mkdir dir="${project.build.directory}/${project.build.finalName}"/>
                <echo>Creating file ${project.build.directory}/${project.build.finalName}/version.json
                </echo>
                <echo file="${project.build.directory}/${project.build.finalName}/version.json">
                  <![CDATA[
						        	{"version": "${project.version}", "buildtime": "${buildtime}", "revision": "${revision}"}
						        	]]>
                </echo>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>generate-rest-documentation</id>
      <build>
        <resources>
          <resource>
            <directory>${asciidoctor.input.directory}</directory>
            <targetPath>${generated.asciidoc.filtered.directory}</targetPath>
            <filtering>true</filtering>
          </resource>
          <resource>
            <directory>${basedir}/src/main/resources</directory>
            <targetPath>${project.build.directory}/classes</targetPath>
            <filtering>false</filtering>
          </resource>
        </resources>
        <plugins>
          <plugin>
            <groupId>com.coderplus.maven.plugins</groupId>
            <artifactId>copy-rename-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>copy-file</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>rename</goal>
                </goals>
                <configuration>
                  <sourceFile>${generated.asciidoc.filtered.directory}/pricediff.adoc</sourceFile>
                  <destinationFile>${generated.asciidoc.filtered.directory}/${generated.asciidoc.file}</destinationFile>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.redowlanalytics</groupId>
            <artifactId>swagger2markup-maven-plugin</artifactId>
            <configuration>
              <inputDirectory>${swagger.directory}</inputDirectory>
              <outputDirectory>${generated.asciidoc.generated.directory}</outputDirectory>
              <markupLanguage>asciidoc</markupLanguage>
              <separateDefinitions>false</separateDefinitions>
            </configuration>
            <executions>
              <execution>
                <id>output-asciidoc</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>process-swagger</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.asciidoctor</groupId>
            <artifactId>asciidoctor-maven-plugin</artifactId>
            <!-- Configure generic document generation settings -->
            <configuration>
              <sourceDirectory>${generated.asciidoc.filtered.directory}</sourceDirectory>
              <sourceDocumentName>${generated.asciidoc.file}</sourceDocumentName>
              <attributes>
                <doctype>book</doctype>
                <toc>left</toc>
                <toclevels>2</toclevels>
                <generated>${generated.asciidoc.generated.directory}</generated>
                <numbered>true</numbered>
              </attributes>
            </configuration>
            <!-- Since each execution can only handle one backend, run separate
                            executions for each desired output type -->
            <executions>
              <execution>
                <id>output-html</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <backend>html5</backend>
                  <outputDirectory>${asciidoctor.html.output.directory}</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>output-pdf</id>
                <phase>process-classes</phase>
                <goals>
                  <goal>process-asciidoc</goal>
                </goals>
                <configuration>
                  <backend>pdf</backend>
                  <outputDirectory>${asciidoctor.pdf.output.directory}</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-site-plugin</artifactId>
            <version>3.2</version>
            <dependencies>
              <dependency>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>1.5.2</version>
              </dependency>
            </dependencies>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>start-domain</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>properties-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>initialize</phase>
                <goals>
                  <goal>read-project-properties</goal>
                </goals>
                <configuration>
                  <files>
                    <file>${domain.properties}</file>
                  </files>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.glassfish.maven.plugin</groupId>
            <artifactId>maven-glassfish-plugin</artifactId>
            <executions>
              <execution>
                <id>start-deploy</id>
                <phase>initialize</phase>
                <goals>
                  <goal>start-domain</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>stop-domain</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>properties-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>initialize</phase>
                <goals>
                  <goal>read-project-properties</goal>
                </goals>
                <configuration>
                  <files>
                    <file>${domain.properties}</file>
                  </files>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.glassfish.maven.plugin</groupId>
            <artifactId>maven-glassfish-plugin</artifactId>
            <executions>
              <execution>
                <id>stop-deploy</id>
                <phase>initialize</phase>
                <goals>
                  <goal>stop-domain</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>deploy</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>properties-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>initialize</phase>
                <goals>
                  <goal>read-project-properties</goal>
                </goals>
                <configuration>
                  <files>
                    <file>${domain.properties}</file>
                  </files>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.glassfish.maven.plugin</groupId>
            <artifactId>maven-glassfish-plugin</artifactId>
            <executions>
              <execution>
                <id>start-deploy</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>deploy</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>undeploy</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>properties-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>initialize</phase>
                <goals>
                  <goal>read-project-properties</goal>
                </goals>
                <configuration>
                  <files>
                    <file>${domain.properties}</file>
                  </files>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.glassfish.maven.plugin</groupId>
            <artifactId>maven-glassfish-plugin</artifactId>
            <executions>
              <execution>
                <id>start-undeploy</id>
                <phase>initialize</phase>
                <goals>
                  <goal>undeploy</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>redeploy</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>properties-maven-plugin</artifactId>
            <executions>
              <execution>
                <phase>initialize</phase>
                <goals>
                  <goal>read-project-properties</goal>
                </goals>
                <configuration>
                  <files>
                    <file>${domain.properties}</file>
                  </files>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.glassfish.maven.plugin</groupId>
            <artifactId>maven-glassfish-plugin</artifactId>
            <executions>
              <execution>
                <id>start-redeploy</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>undeploy</goal>
                  <goal>deploy</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.glassfish.maven.plugin</groupId>
            <artifactId>maven-glassfish-plugin</artifactId>
            <configuration>
              <glassfishDirectory>${glassfish.home}</glassfishDirectory>
              <user>admin</user>
              <adminPassword>admin</adminPassword>
              <autoCreate>${glassfish.autoCreate}</autoCreate>
              <debug>true</debug>
              <echo>true</echo>
              <terse>true</terse>
              <domain>
                <name>pricediff</name>
                <host>docker</host>
                <adminPort>9348</adminPort>
                <httpPort>9380</httpPort>
                <iiopPort>9338</iiopPort>
                <jmsPort>9376</jmsPort>
                <reuse>false</reuse>
              </domain>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <!--<profile>-->
      <!--<id>mutation</id>-->
      <!--<activation>-->
        <!--<activeByDefault>false</activeByDefault>-->
      <!--</activation>-->
      <!--<build>-->
        <!--<plugins>-->
          <!--<plugin>-->
            <!--<groupId>org.pitest</groupId>-->
            <!--<artifactId>pitest-maven</artifactId>-->
            <!--<version>1.1.5</version>-->
            <!--<executions>-->
              <!--<execution>-->
                <!--<id>report</id>-->
                <!--<phase>initialize</phase>-->
                <!--<goals>-->
                  <!--<goal>mutationCoverage</goal>-->
                <!--</goals>-->
              <!--</execution>-->
            <!--</executions>-->
          <!--</plugin>-->
        <!--</plugins>-->
      <!--</build>-->
    <!--</profile>-->

  </profiles>
</project>
